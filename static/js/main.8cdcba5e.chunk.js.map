{"version":3,"sources":["resources/content.js","utilities/utilityContext.js","Keyboard.js","Accuracy.js","Display.js","WordPerMinute.js","Main.js","utilities/UtilityProvider.js","App.js","index.js"],"names":["text","utilityContext","React","createContext","activeKey","Set","setActiveKey","pressedKeys","setPressedKeys","Keyboard","useContext","addPressedKey","handleKeyDown","useCallback","code","key","length","toLowerCase","add","handleKeyUp","delete","useEffect","window","addEventListener","removeEventListener","className","map","row","index","Array","from","letter","has","Accuracy","useState","numLetterFailed","setNumLetterFailed","numLetterPassed","setNumLetterPassed","currentIndex","passed","failed","toFixed","Display","getClass","isVisited","isTypo","WordPerMinute","startTime","setStartTime","timeSpent","setTimeSpent","numOfTypedWords","setNumOfTypedWords","time","Date","currentTime","getMinutes","getSeconds","typedWords","Main","UtilityProvider","children","value","push","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cdcba5e.chunk.js","sourcesContent":["const text = `my sister paula and her husband chris had just finished tucking their young ones into bed one evening when they heard crying coming from the childrens room rushing in they found tommy crying hysterically he had accidentally swallowed a coin and was sure he was going to die no amount of talking could change his mind trying to calm him chris palmed a coin that he happened to have in his pocket and pretended to remove it from tommys ear tommy naturally was delighted in a flash he snatched it from his fathers hand swallowed it and demanded cheerfully Do it again Dad`;\n\nexport default text;\n","import React from \"react\";\n\nexport const utilityContext = React.createContext({\n  activeKey: new Set(),\n  setActiveKey: () => {},\n  pressedKeys: [],\n  setPressedKeys: () => {},\n});\n\n","import React, { useEffect, useCallback, useContext } from \"react\";\nimport \"./Keyboard.css\";\nimport text from \"./resources/content\";\nimport { utilityContext } from \"./utilities/utilityContext\";\n\nexport default function Keyboard() {\n  const lettersArray = [\"qwertyuiop\", \"asdfghjkl\", \"zxcvbnm\"];\n  const { activeKey, addPressedKey, setActiveKey, pressedKeys } =\n    useContext(utilityContext);\n\n  const handleKeyDown = useCallback(\n    ({ code, key }) => {\n      if (pressedKeys.length < text.length) {\n        addPressedKey(key.toLowerCase());\n      }\n      activeKey.add(code.toLowerCase());\n      setActiveKey(new Set([...activeKey]));\n    },\n    [activeKey, setActiveKey, addPressedKey,pressedKeys]\n  );\n\n  const handleKeyUp = useCallback(\n    ({ code }) => {\n      activeKey.delete(code.toLowerCase());\n      setActiveKey(new Set([...activeKey]));\n    },\n    [activeKey, setActiveKey]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, [handleKeyDown, handleKeyUp]);\n\n  return (\n    <div className=\"keyboard-wrapper\">\n      {lettersArray.map((row, index) => (\n        <div key={`row-${index + 1}`} className=\"row\">\n          {Array.from(row).map((letter) => (\n            <div\n              className={\n                activeKey.has(`key${letter}`)\n                  ? \"letter active-letter\"\n                  : \"letter\"\n              }\n              key={letter}\n            >\n              <span>{letter}</span>\n            </div>\n          ))}\n        </div>\n      ))}\n      <div className=\"row\">\n        <div\n          className={\n            activeKey.has(\"space\")\n              ? \"letter active-letter space-bar\"\n              : \"letter space-bar\"\n          }\n        >\n          <span>space</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { utilityContext } from \"./utilities/utilityContext\";\nimport text from \"./resources/content\";\nimport \"./Accuracy.css\";\n\nexport default function Accuracy() {\n  const { pressedKeys } = useContext(utilityContext);\n  const [numLetterFailed, setNumLetterFailed] = useState(0);\n  const [numLetterPassed, setNumLetterPassed] = useState(0);\n\n  const currentIndex = useCallback(\n    () => pressedKeys.length - 1,\n    [pressedKeys]\n  )();\n\n  useEffect(() => {\n    if (currentIndex > -1 && currentIndex < text.length) {\n      if (pressedKeys[currentIndex] === text[currentIndex]) {\n        setNumLetterPassed((passed) => passed + 1);\n      } else if (pressedKeys[currentIndex] !== text[currentIndex]) {\n        setNumLetterFailed((failed) => failed + 1);\n      }\n    }\n  }, [pressedKeys, currentIndex]);\n\n  return (\n    <div className=\"accuracy-wrapper\">\n      <p>Pass : {numLetterPassed} </p>\n      <p>Fail : {numLetterFailed}</p>\n      <p>\n        Accuracy: {pressedKeys.length > 0 ? (((numLetterPassed / pressedKeys.length) * 100)).toFixed(2) : 0}%\n      </p>\n    </div>\n  );\n}\n","import React, { useCallback, useContext } from \"react\";\nimport { utilityContext } from \"./utilities/utilityContext\";\nimport text from \"./resources/content\";\nimport \"./Display.css\";\n\nexport default function Display() {\n  const { pressedKeys } = useContext(utilityContext);\n\n  const getClass = useCallback(\n    (index, letter) => {\n      const isVisited = index < pressedKeys.length;\n      const isTypo = pressedKeys[index] !== letter.toLowerCase(); \n      if (isVisited && isTypo)\n        return letter === \" \" ? \"character typo-space\" : \"character typo\";\n\n      if (isVisited) return \"character visited\";\n      return \"character\";\n    },\n    [pressedKeys]\n  );\n\n  return (\n    <div className=\"text-wrapper\">\n      {Array.from(text).map((letter, index) => (\n        <span className={getClass(index, letter)} key={`${index}${letter}`}>\n          {letter}\n        </span>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { utilityContext } from \"./utilities/utilityContext\";\nimport text from \"./resources/content\";\nimport \"./WordPerMinute.css\";\n\nexport default function WordPerMinute() {\n  const { pressedKeys } = useContext(utilityContext);\n  const [startTime, setStartTime] = useState(0);\n  const [timeSpent, setTimeSpent] = useState(0);\n  const [numOfTypedWords, setNumOfTypedWords] = useState(0);\n  const currentIndex = pressedKeys.length - 1;\n\n  useEffect(() => {\n    if (currentIndex > -1 && currentIndex < text.length) {\n      const time = new Date();\n      const currentTime = time.getMinutes() + time.getSeconds() / 60;\n      if (currentIndex === 0) {\n        setStartTime((time.getMinutes() + time.getSeconds() / 60) - 0.2);\n      }\n\n      if (currentIndex === text.length - 1 || text[currentIndex + 1] === \" \") {\n        setNumOfTypedWords((typedWords) => typedWords + 1);\n      }\n\n      setTimeSpent(currentTime - (startTime != null ? startTime : currentTime));\n    }\n  }, [currentIndex, setTimeSpent, startTime, pressedKeys]);\n\n  return (\n    <div className=\"wordpermin-wrapper\">\n      <p>typed words : {numOfTypedWords}</p>\n      <p>time spent : {timeSpent.toFixed(2)}</p>\n      <p>words per minutes : {(numOfTypedWords / timeSpent || 0).toFixed(0)}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport Accuracy from \"./Accuracy\";\nimport Display from \"./Display\";\nimport WordPerMinute from \"./WordPerMinute\";\nimport \"./Main.css\";\n\nexport default function Main() {\n  return (\n    <div className=\"main-content\">\n      <div className=\"left\">\n        <Accuracy />\n        <WordPerMinute />\n      </div>\n      <div className=\"center\">\n        <div className=\"top\">\n          <Display />\n        </div>\n        <div className=\"bottom\">\n          <Keyboard />\n        </div>\n      </div>\n      <div className=\"right\">are you right</div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { utilityContext } from \"./utilityContext\";\n\nfunction UtilityProvider({ children }) {\n  const [activeKey, setActiveKey] = useState(new Set());\n  const [pressedKeys, setPressedKeys] = useState([]);\n\n  const addPressedKey = (key) => {\n    pressedKeys.push(key);\n    setPressedKeys([...pressedKeys]);\n  };\n\n  const value = {\n    activeKey,\n    setActiveKey,\n    pressedKeys,\n    addPressedKey,\n    setPressedKeys,\n  };\n  return (\n    <utilityContext.Provider value={value}>{children}</utilityContext.Provider>\n  );\n}\n\nexport default UtilityProvider;\n","import \"./App.css\";\nimport Main from \"./Main.js\";\nimport UtilityProvider from './utilities/UtilityProvider'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <UtilityProvider>\n        <Main />\n      </UtilityProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}