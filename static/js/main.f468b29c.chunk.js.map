{"version":3,"sources":["utilities/utilityContext.js","Keyboard.js","Accuracy.js","Display.js","WordPerMinute.js","Main.js","utilities/UtilityProvider.js","App.js","index.js"],"names":["utilityContext","React","createContext","activeKey","Set","setActiveKey","currentPosition","setCurrentPosition","bagsOfKeys","setbagsOfKeys","numLetterFailed","setNumLetterFailed","numLetterPassed","setNumLetterPassed","lengthOfText","setLengthOfText","curNumOfTypedWords","setCurNumOfTypedWords","startTime","setStartTime","timeSpent","setTimeSpent","Keyboard","useContext","handleKeyDown","useCallback","code","key","toLowerCase","Object","assign","add","handleKeyUp","delete","useEffect","window","addEventListener","removeEventListener","className","map","row","index","Array","from","letter","has","Accuracy","toFixed","Display","text","length","trim","time","Date","getMinutes","getSeconds","position","data-keycode","style","color","borderBottom","WordPerMinute","currentTime","wpm","Main","UtilityProvider","children","useState","value","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f468b29c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const utilityContext = React.createContext({\n  activeKey: new Set(),\n  setActiveKey: () => {},\n  currentPosition: 1,\n  setCurrentPosition: () => {},\n  bagsOfKeys: {},\n  setbagsOfKeys: () => {},\n  numLetterFailed: 0,\n  setNumLetterFailed: () => {},\n  numLetterPassed: 0,\n  setNumLetterPassed: () => {},\n  lengthOfText: 1,\n  setLengthOfText: () => {},\n  curNumOfTypedWords: 0,\n  setCurNumOfTypedWords: () => {},\n  startTime: null,\n  setStartTime: () => {},\n  timeSpent: 0,\n  setTimeSpent: () => {},\n});\n","import React, { useEffect, useCallback, useContext } from \"react\";\nimport \"./Keyboard.css\";\nimport { utilityContext } from \"./utilities/utilityContext\";\n\nexport default function Keyboard() {\n  const lettersArray = [\"qwertyuiop\", \"asdfghjkl\", \"zxcvbnm\"];\n  const {\n    activeKey,\n    setActiveKey,\n    currentPosition,\n    setCurrentPosition,\n    bagsOfKeys,\n    setbagsOfKeys,\n  } = useContext(utilityContext);\n  const handleKeyDown = useCallback(\n    ({ code, key }) => {\n        bagsOfKeys[currentPosition] = key.toLowerCase();\n        setbagsOfKeys(Object.assign({}, bagsOfKeys));\n        setCurrentPosition(currentPosition + 1);\n        activeKey.add(code.toLowerCase());\n        setActiveKey(new Set([...activeKey]));\n    },\n    [\n      activeKey,\n      setActiveKey,\n      currentPosition,\n      setCurrentPosition,\n      bagsOfKeys,\n      setbagsOfKeys,\n    ]\n  );\n\n  const handleKeyUp = useCallback(\n    ({ code }) => {\n      activeKey.delete(code.toLowerCase());\n      setActiveKey(new Set([...activeKey]));\n    },\n    [activeKey, setActiveKey]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, [handleKeyDown, handleKeyUp]);\n\n  return (\n    <div className=\"keyboard-wrapper\">\n      {lettersArray.map((row, index) => (\n        <div key={`row-${index + 1}`} className=\"row\">\n          {Array.from(row).map((letter) => (\n            <div\n              className={\n                activeKey.has(`key${letter}`)\n                  ? \"letter active-letter\"\n                  : \"letter\"\n              }\n              key={letter}\n            >\n              <span>{letter}</span>\n            </div>\n          ))}\n        </div>\n      ))}\n      <div className=\"row\">\n        <div\n          className={\n            activeKey.has(\"space\")\n              ? \"letter active-letter space-bar\"\n              : \"letter space-bar\"\n          }\n        >\n          <span>space</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { utilityContext } from \"./utilities/utilityContext\";\nimport \"./Accuracy.css\";\n\nexport default function Accuracy() {\n  const { numLetterPassed, numLetterFailed,lengthOfText } = useContext(utilityContext);\n  return (\n    <div className=\"accuracy-wrapper\">\n      <p>Pass : {numLetterPassed}</p>\n      <p>Fail : {numLetterFailed}</p>\n      <p>Accuracy: {((numLetterPassed / lengthOfText) * 100).toFixed(2)}%</p>\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { utilityContext } from \"./utilities/utilityContext\";\nimport \"./Display.css\";\n\nexport default function Display() {\n  const text =\n    \"My sister, Paula, and her husband, Chris, had just finished tucking their young ones into bed one evening when they heard crying coming from the childrens room. Rushing in, they found Tommy crying hysterically. He had accidentally swallowed a coin and was sure he was going to die. No amount of talking could change his mind. Trying to calm him, Chris palmed a coin that he happened to have in his pocket and pretended to remove it from Tommys ear.  Tommy, naturally, was delighted. In a flash, he snatched it from his fathers hand, swallowed it and demanded cheerfully - Do it again, Dad\";\n  const {\n    currentPosition,\n    bagsOfKeys,\n    numLetterPassed,\n    setNumLetterPassed,\n    numLetterFailed,\n    setNumLetterFailed,\n    setLengthOfText,\n    curNumOfTypedWords,\n    setCurNumOfTypedWords,\n    setStartTime,\n  } = useContext(utilityContext);\n\n  useEffect(() => {\n    if (currentPosition > 1 && currentPosition < text.length + 2) {\n      // word per minutes\n      if (text[currentPosition - 2].trim().length < 1 || currentPosition === text.length+1) {\n        setCurNumOfTypedWords(curNumOfTypedWords + 1);\n      }\n      if (currentPosition === 2) { // start position\n        setLengthOfText(text.length);\n        const time = new Date();\n        setStartTime(time.getMinutes() + time.getSeconds() / 60);\n      }\n\n      // accuracy\n      if (\n        text[currentPosition - 2].toLowerCase() ===\n        bagsOfKeys[currentPosition - 1]\n      ) {\n        setNumLetterPassed(numLetterPassed + 1);\n      } else {\n        setNumLetterFailed(numLetterFailed + 1);\n      }\n    }\n  }, [currentPosition]); // eslint-disable-line\n\n  return (\n    <div className=\"text-wrapper\">\n      {Array.from(text).map((letter, position) => (\n        <span\n          className={\n            position + 1 === currentPosition\n              ? \"display-text current-letter\"\n              : \"display-text\"\n          }\n          data-keycode={`key${letter}`}\n          key={`${position + 1}${letter}`}\n          style={{\n            color:\n              position + 1 < currentPosition\n                ? bagsOfKeys[position + 1] === letter.toLowerCase()\n                  ? \"#a0a0a7\"\n                  : \"#d02d2a\"\n                : \"#ffffff\",\n            borderBottom:\n              letter.trim().length < 1 &&\n              position + 1 in bagsOfKeys &&\n              bagsOfKeys[position + 1] !== letter\n                ? \"2px solid #d02d2a\"\n                : null,\n          }}\n        >\n          {letter}\n        </span>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { utilityContext } from \"./utilities/utilityContext\";\nimport \"./WordPerMinute.css\";\n\nexport default function WordPerMinute() {\n  const { curNumOfTypedWords, startTime,currentPosition ,lengthOfText,timeSpent, setTimeSpent} =\n    useContext(utilityContext);\n  const time = new Date();\n  const currentTime = time.getMinutes() + time.getSeconds() / 60;\n\n  if (currentPosition < lengthOfText + 2){ // stop calculating wpm and tp\n    setTimeSpent(currentTime - (startTime != null ? startTime : currentTime))\n  }\n  const wpm = curNumOfTypedWords / timeSpent || 0;\n  return (\n    <div className=\"wordpermin-wrapper\">\n      <p>typed words : {curNumOfTypedWords}</p>\n      <p>time spent : {timeSpent.toFixed(2)}</p>\n      <p>words per minutes : {wpm.toFixed(0)}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport Accuracy from \"./Accuracy\";\nimport Display from \"./Display\";\nimport WordPerMinute from \"./WordPerMinute\";\nimport \"./Main.css\";\n\nexport default function Main() {\n  return (\n    <div className=\"main-content\">\n      <div className=\"left\">\n        <Accuracy />\n        <WordPerMinute />\n      </div>\n      <div className=\"center\">\n        <div className=\"top\">\n          <Display />\n        </div>\n        <div className=\"bottom\">\n          <Keyboard />\n        </div>\n      </div>\n      <div className=\"right\">are you right</div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { utilityContext } from \"./utilityContext\";\n\nfunction UtilityProvider({ children }) {\n  const [activeKey, setActiveKey] = useState(new Set());\n  const [currentPosition, setCurrentPosition] = useState(1);\n  const [bagsOfKeys, setbagsOfKeys] = useState({});\n  const [numLetterFailed, setNumLetterFailed] = useState(0);\n  const [numLetterPassed, setNumLetterPassed] = useState(0);\n  const [lengthOfText, setLengthOfText] = useState(1);\n  const [curNumOfTypedWords, setCurNumOfTypedWords] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [timeSpent, setTimeSpent] = useState(0)\n\n  const value = {\n    activeKey,\n    setActiveKey,\n    currentPosition,\n    setCurrentPosition,\n    bagsOfKeys,\n    setbagsOfKeys,\n    numLetterFailed,\n    setNumLetterFailed,\n    numLetterPassed,\n    setNumLetterPassed,\n    lengthOfText,\n    setLengthOfText,\n    curNumOfTypedWords,\n    setCurNumOfTypedWords,\n    startTime,\n    setStartTime,\n    timeSpent,\n    setTimeSpent\n  };\n  return (\n    <utilityContext.Provider value={value}>{children}</utilityContext.Provider>\n  );\n}\n\nexport default UtilityProvider;\n","import \"./App.css\";\nimport Main from \"./Main.js\";\nimport UtilityProvider from './utilities/UtilityProvider'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <UtilityProvider>\n        <Main />\n      </UtilityProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}